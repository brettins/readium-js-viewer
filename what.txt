build-output/_single-bundle/readium-js-viewer_all_CHROMEAPP.js.map:278:    "\ndefine(\"hgn!readium_js_viewer_html_templates/details-body.html\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template({code: function (c,p,i) { var t=this;t.b(i=i||\"\");t.b(\"<div class=\\\"details-body\\\">\");t.b(\"\\n\" + i);t.b(\"    <button id=\\\"closeEpubDetailsCross\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"  tabindex=\\\"999\\\" title=\\\"\");t.b(t.v(t.d(\"strings.i18n_close\",c,p,0)));t.b(\" \");t.b(t.v(t.d(\"strings.i18n_details\",c,p,0)));t.b(\"\\\" aria-label=\\\"\");t.b(t.v(t.d(\"strings.i18n_close\",c,p,0)));t.b(\" \");t.b(t.v(t.d(\"strings.i18n_details\",c,p,0)));t.b(\"\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\");t.b(\"\\n\" + i);t.b(\"    \");t.b(\"\\n\" + i);t.b(\"    <div class=\\\"offscreenText\\\">Details Start</div>\");t.b(\"\\n\" + i);t.b(\"    <div class=\\\"modal-cover-wrap\\\">\");t.b(\"\\n\" + i);if(t.s(t.d(\"data.coverHref\",c,p,1),c,p,0,415,525,\"{{ }}\")){t.rs(c,p,function(c,p,t){t.b(\"        <img class=\\\"details-cover-image img-responsive\\\" src=\\\"\");t.b(t.v(t.d(\"data.coverHref\",c,p,0)));t.b(\"\\\" alt=\\\"ePUB cover\\\">\");t.b(\"\\n\" + i);});c.pop();}if(!t.s(t.d(\"data.coverHref\",c,p,1),c,p,1,0,0,\"\")){t.b(\"        <div class=\\\"no-cover\\\" style=\\\"background-image: url('\");t.b(t.v(t.d(\"data.noCoverBackground\",c,p,0)));t.b(\"')\\\"><p>\");t.b(t.v(t.d(\"data.title\",c,p,0)));t.b(\"</p></div>\");t.b(\"\\n\" + i);};t.b(\"        <div class=\\\"buttons\\\">\");t.b(\"\\n\" + i);t.b(\"            <button id=\\\"buttEpubDetailsRead\\\" tabindex=\\\"1000\\\" class=\\\"btn btn-default read\\\" data-dismiss=\\\"modal\\\" data-book=\\\"\");t.b(t.v(t.d(\"data.rootUrl\",c,p,0)));t.b(\"\\\" type=\\\"button\\\">\");t.b(t.v(t.d(\"strings.i18n_read\",c,p,0)));t.b(\"</button>\");t.b(\"\\n\" + i);t.b(\"            <button id=\\\"buttEpubDetailsDelete\\\" tabindex=\\\"1000\\\" class=\\\"btn btn-danger delete\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\");t.b(t.v(t.d(\"strings.i18n_delete\",c,p,0)));t.b(\"</button>\");t.b(\"\\n\" + i);t.b(\"        </div>\");t.b(\"\\n\" + i);t.b(\"    </div>\");t.b(\"\\n\" + i);t.b(\"    <div class='modal-book-info'>\");t.b(\"\\n\" + i);t.b(\"        <h3 class='modal-title'>\");t.b(t.v(t.d(\"data.title\",c,p,0)));t.b(\"</h3>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_author\",c,p,0)));t.b(t.v(t.d(\"data.author\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_publisher\",c,p,0)));t.b(t.v(t.d(\"data.publisher\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_pub_date\",c,p,0)));t.b(t.v(t.d(\"data.pubdate\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_modified_date\",c,p,0)));t.b(t.v(t.d(\"data.modified_date\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_id\",c,p,0)));t.b(t.v(t.d(\"data.id\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_epub_version\",c,p,0)));t.b(t.v(t.d(\"data.epub_version\",c,p,0)));t.b(\"</div>        \");t.b(\"\\n\" + i);t.b(\"    </div>\");t.b(\"\\n\");t.b(\"\\n\" + i);t.b(\"    <div class=\\\"offscreenText\\\">Details End</div>\");t.b(\"\\n\" + i);t.b(\"</div>\");t.b(\"\\n\");return t.fl(); },partials: {}, subs: {  }}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n\n",
build-output/_single-bundle/readium-js-viewer_all_CHROMEAPP.js.map:296:    "define('readium_js_viewer/EpubLibrary',[\n'./ModuleConfig',\n'jquery',\n'bootstrap',\n'bootstrapA11y',\n'StorageManager',\n'Settings',\n'./EpubLibraryManager',\n'i18nStrings',\n'hgn!readium_js_viewer_html_templates/library-navbar.html',\n'hgn!readium_js_viewer_html_templates/library-body.html',\n'hgn!readium_js_viewer_html_templates/library-body-list-view.html',\n'hgn!readium_js_viewer_html_templates/empty-library.html',\n'hgn!readium_js_viewer_html_templates/library-item.html',\n'hgn!readium_js_viewer_html_templates/library-item-list-view.html',\n'hgn!readium_js_viewer_html_templates/dialog.html',\n'hgn!readium_js_viewer_html_templates/about-dialog.html',\n'hgn!readium_js_viewer_html_templates/details-body.html',\n'hgn!readium_js_viewer_html_templates/add-epub-dialog.html',\n'hgn!readium_js_viewer_html_templates/categories-dialog-body.html',\n'hgn!readium_js_viewer_html_templates/filter-categories-dialog-body.html',\n'./ReaderSettingsDialog',\n'./CategoriesDialog',\n'./FilterCategoriesDialog',\n'./Dialogs',\n'./workers/Messages',\n'Analytics',\n'./Keyboard',\n'./versioning/ReadiumVersioning',\n'readium_shared_js/helpers'],\n\nfunction(\nmoduleConfig,\n$,\nbootstrap,\nbootstrapA11y,\nStorageManager,\nSettings,\nlibraryManager,\nStrings,\nLibraryNavbar,\nLibraryBody,\nLibraryBodyListView,\nEmptyLibrary,\nLibraryItem,\nLibraryItemListView,\nDialog,\nAboutDialog,\nDetailsBody,\nAddEpubDialog,\nCategoriesDialogBody,\nFilterCategoriesDialogBody,\nSettingsDialog,\nCategoriesDialogController,\nFilterCategoriesDialogController,\nDialogs,\nMessages,\nAnalytics,\nKeyboard,\nVersioning,\nHelpers){\n\n\n    //to add a header section to the Dialog, add header: \"true\" property\n    var pageDialogsHtmlString = { \n        details             : Dialog({ dialogName: \"details\"            }),\n        filterCategories    : Dialog({ dialogName: \"filterCategories\"   }),\n        categories          : Dialog({ dialogName: \"categories\"         })\n                        };\n\n    var heightRule,\n        noCoverRule;\n        //maxHeightRule\n\n    var findHeightRule = function(){\n\n         var styleSheet=document.styleSheets[0];\n         var ii=0;\n         var cssRule;\n        do {\n            if (styleSheet.cssRules) {\n                cssRule = styleSheet.cssRules[ii];\n            } else {\n                cssRule = styleSheet.rules[ii];\n            }\n            if (cssRule && cssRule.selectorText)  {\n                if (cssRule.selectorText.toLowerCase()=='.library-item') {\n                    heightRule = cssRule;\n                }\n                // else if (cssRule.selectorText.toLowerCase()=='.library-item img') {\n                //     maxHeightRule = cssRule;\n                // }\n                else if (cssRule.selectorText.toLowerCase() == 'body:not(.list-view) .library-item .no-cover'){\n                    noCoverRule = cssRule;\n                }\n\n            }\n            ii++;\n        } while (cssRule);\n       }\n\n\n    var setItemHeight = function(){\n        if (!heightRule || !noCoverRule) return;\n\n        var medWidth = 2,\n            smWidth = 3,\n            xsWidth = 4,\n            rowHeight = 0,\n            imgWidth = 0,\n            scale = 1;\n\n        var winWidth = window.innerWidth;\n\n        if (winWidth >= 992){\n            imgWidth = winWidth * (medWidth/12) - 30;\n            rowHeight = 1.33 * imgWidth + 60;\n        }\n        else if (winWidth >= 768){\n            imgWidth = winWidth * (smWidth/12) - 30;\n            rowHeight = 1.33 * imgWidth + 60;\n        }\n        else{\n            imgWidth = winWidth * (xsWidth/12) - 30;\n            rowHeight = 1.33 * imgWidth + 20;\n        }\n        heightRule.style.height  = rowHeight + 'px';\n        scale = imgWidth/300;\n\n        noCoverRule.style.width = imgWidth + 'px';\n        noCoverRule.style.height = 1.33 * imgWidth + 'px';\n        noCoverRule.style.fontSize = 40 * scale + 'px';\n        //maxHeightRule.style.height = 1.33 * imgWidth + 'px';\n        //maxHeightRule.style.width = imgWidth + 'px';\n    };\n\n\n    var loadFilterCategoriesDialog = function() {\n        //load the categories template as a string\n        bodyStr = FilterCategoriesDialogBody({string: Strings });\n        showDialog(\"filterCategories\");\n        $('.filterCategories-dialog .modal-body').html(bodyStr);\n        FilterCategoriesDialogController.initDialog();\n    };\n\n    /**\n     * Loads the categories dialog to add / remove and view current category tags for the book\n     */\n    var loadCategoriesDialog = function() {\n\n        //pull categories from current HTML\n        var categoriesCommaSeparated = $(this).attr('data-categories');\n        \n        //unique identifier - root directory\n        var rootDir = $(this).attr('data-root-dir');\n        var categories = categoriesCommaSeparated.split(\",\");\n\n        //there is an extra category b/c the mustache template will generate an extra \n        //comma, so remove that. \n        categories.pop();\n        \n\n        //load the categories template as a string\n        bodyStr = CategoriesDialogBody({string: Strings, categories: categories,rootDir:rootDir});\n\n        showDialog(\"categories\");\n        $('.categories-dialog .modal-body').html(bodyStr);\n        CategoriesDialogController.initDialog(loadLibraryItems);\n    };//var loadCategoriesDialog = function() \n\n    var showDetailsDialog = function(details){\n        var bodyStr = DetailsBody({\n            data: details,\n            strings: Strings\n        });\n\n        $('.details-dialog .modal-body').html(bodyStr);\n        \n        \n        $('#buttEpubDetailsDelete').on('keydown',function(evt) {\n            if(evt.which === 9 && !(evt.shiftKey | evt.ctrlKey | evt.metaKey | evt.altKey)) { // TAB pressed\n              evt.preventDefault();\n              $('#closeEpubDetailsCross').focus();\n            }\n        });\n        $('#closeEpubDetailsCross').on('keydown',function(evt) {\n            if(evt.which === 9 && evt.shiftKey) { // shift-TAB pressed\n              evt.preventDefault();\n              $('#buttEpubDetailsDelete').focus();\n            }\n        });\n        \n        $('.details-dialog .delete').on('click', function(){\n            $('.details-dialog').modal('hide');\n            var success = function(){\n                libraryManager.retrieveAvailableEpubs(loadLibraryItems);\n                Dialogs.closeModal();\n            }\n\n            var promptMsg = Strings.i18n_are_you_sure + ' \\'' + details.title + '\\'';\n\n            Dialogs.showModalPrompt(Strings.delete_dlg_title, promptMsg,\n                                    Strings.i18n_delete, Strings.i18n_cancel,\n                                    function(){\n                                        Dialogs.showModalProgress(Strings.delete_progress_title, '');\n                                        Dialogs.updateProgress(100, Messages.PROGRESS_DELETING, details.title, true);\n                                        libraryManager.deleteEpubWithId(details.rootDir, success, showError)\n                                    });\n        });\n    }\n\n\n    var showError = function(errorCode, data){\n        Dialogs.showError(errorCode, data);\n    }\n\n\n    /**\n     * Shows a modal dialog box \n     * @param   dialogName  The name of the box being loaded\n     */\n    var showDialog = function(dialogName)\n    {\n        $('.'+dialogName+'-dialog').remove();\n        $('#app-container').append(pageDialogsHtmlString[dialogName]);\n        $('.'+dialogName+'-dialog').modal();\n    }\n\n    var loadDetails = function(e){\n        var $this = $(this),\n            url = $this.attr('data-package'),\n            bookRoot = $this.attr('data-root'),\n            rootDir = $this.attr('data-root-dir'),\n            noCoverBg = $this.attr('data-no-cover');\n\n        $('.details-dialog').remove();\n\n        $('.details-dialog').off('hidden.bs.modal');\n        $('.details-dialog').off('shown.bs.modal');\n\n        $('#app-container').append(pageDialogsHtmlString.details);\n        \n        $('#details-dialog').on('hidden.bs.modal', function () {\n            Keyboard.scope('library');\n\n            setTimeout(function(){ $this.focus(); }, 50);\n        });\n        $('#details-dialog').on('shown.bs.modal', function(){\n            Keyboard.scope('details');\n        });\n\n\n        $('.details-dialog').modal();\n        \n        var retrieveDetails = function(packageUrl) {\n            \n            if (!packageUrl || packageUrl.indexOf(\".opf\") < 0) {\n                console.warn(\"no package path (OPF within zipped EPUB archive?): \" + packageUrl);\n            }\n            \n            libraryManager.retrieveFullEpubDetails(packageUrl, bookRoot, rootDir, noCoverBg, showDetailsDialog, showError);\n        };\n        \n        console.log(\"OPF package URL: \" + url);\n        if (url && url.indexOf(\".opf\") < 0) {\n            \n            var urlContainerXml = url + \"META-INF/container.xml\"; \n            $.get(urlContainerXml, function(data){\n    \n                if(typeof(data) === \"string\" ) {\n                    var parser = new window.DOMParser;\n                    data = parser.parseFromString(data, 'text/xml');\n                }\n                var $rootfile = $('rootfile', data);\n                var rootFilePath = $rootfile.attr('full-path');\n                console.log(\"OPF package path (root-file from container.xml): \" + rootFilePath);\n                \n                var packageUrl = url + (Helpers.EndsWith(url, \"/\") ? \"\" : \"/\") + rootFilePath;\n            \n                console.log(\"OPF package URL (from container.xml): \" + packageUrl);\n                retrieveDetails(packageUrl);\n    \n            }).fail(function() {\n                //console.warn(arguments);\n                console.error(\"FAILED OPF package URL (from container.xml): \" + urlContainerXml);\n                retrieveDetails(url);\n            });\n        }\n        else {\n            retrieveDetails(url);\n        }\n    }\n\n    var viewTypes = { grid : \"grid\", list : \"list\"}\n    var loadLibraryItemsGridView = function(epubs) {\n        loadLibraryItems(epubs,viewTypes.grid);\n    }\n    var loadLibraryItemsListView = function(epubs) {\n        loadLibraryItems(epubs,viewTypes.list);\n    }\n\n    var loadLibraryItems = function(epubs,viewType){\n        $('#app-container .library-items').remove();\n\n        //if the view type isn't specified, check if we have the list-view class\n        if (typeof(viewType) === 'undefined') {\n                if ($('body').hasClass(\"list-view\")) {\n                    viewType = viewTypes.list;\n                }\n                else {\n                    viewType = viewTypes.grid;\n                }\n        }//if\n        \n\n        //load library body based on what type of view we are in \n\n        //Load LIST VIEW library body\n        if (viewType === viewTypes.list) {\n            console.log(\"append the list view library body\");\n            $('#app-container').append(LibraryBodyListView({}));\n        }\n        //Load GRID VIEW library body\n        else if (viewType === viewTypes.grid){\n            console.log(\"append the GRID view library body\");\n            $('#app-container').append(LibraryBody({}));\n        }\n\n        if (!epubs.length){\n            $('#app-container .library-items').append(EmptyLibrary({imagePathPrefix: moduleConfig.imagePathPrefix, strings: Strings}));\n            return;\n        }\n        \n        /**\n         * Recursive function to process all epubs. \n         */\n        var processEpub = function(epubs, count) {\n            var epub = epubs[count];\n\n            //On last epub\n            if (!epub) { // count >= epubs.length, eg epub[count] = null\n                $('.details').on('click', loadDetails);\n                $('.categories').on('click', loadCategoriesDialog );\n                $('.filterCategories').on('click', loadFilterCategoriesDialog );\n                return;\n            }\n\n            var noCoverBackground = moduleConfig.imagePathPrefix + 'images/covers/cover' + ((count % 8) + 1) + '.jpg';\n            if (epub.isSubLibraryLink) {\n                noCoverBackground = moduleConfig.imagePathPrefix + 'images/covers/cover2.jpg';\n            }\n\n\n            \n            var createLibraryItem = function() {\n\n                cssClassesString = \"\";\n                if (epub.hasOwnProperty(\"categories\")) {\n                    var cssClassesString = epub.categories.join(\"#\");\n                    cssClassesString = cssClassesString.replace(/ /g, \"_\");\n                    cssClassesString = cssClassesString.replace(/#/g, \" \");\n                }\n                //Display the library item depending on the view type\n                \n                //LIST VIEW\n                if (viewType === viewTypes.list)\n                {\n                    $('.library-items').append(LibraryItemListView({count:{n: count+1, tabindex:count*2+99}, epub: epub, strings: Strings, noCoverBackground: noCoverBackground,cssClasses:cssClassesString}));\n                    console.log(\"view type was equal to list\");\n                }\n                //GRID VIEW \n                else if (viewType === viewTypes.grid)\n                {\n                    $('.library-items').append(LibraryItem({count:{n: count+1, tabindex:count*2+99}, epub: epub, strings: Strings, noCoverBackground: noCoverBackground,cssClasses:cssClassesString}));\n                }\n\n                \n                processEpub(epubs, ++count);\n            };\n            \n            if (!epub.isSubLibraryLink && !epub.packagePath) {\n                \n                createLibraryItem();\n                \n                // --COMMENT--\n                // Code below works, but just here to demonstrate how the package OPF path can be resolved whilst populating the library view. Because the HTTP requests for each ebook introduce huge lag, instead we resolve the OPF path on-demand, when user chooses to see the EPUB details / metadata dialog popup (see loadDetails() function above, which itself emits an HTTP request to get the actual OPF file XML payload, via LibraryManager.retrieveFullEpubDetails())\n                // $.get(epub.rootUrl + \"/META-INF/container.xml\", function(data){\n        \n                //     if(typeof(data) === \"string\" ) {\n                //         var parser = new window.DOMParser;\n                //         data = parser.parseFromString(data, 'text/xml');\n                //     }\n                //     var $rootfile = $('rootfile', data);\n                //     epub.packagePath = $rootfile.attr('full-path');\n                \n                //     createLibraryItem();\n        \n                // }).fail(function() {\n                //     //console.warn(arguments);\n                //     createLibraryItem();\n                // });\n            }\n            else {\n                createLibraryItem();\n            }\n        };\n        processEpub(epubs, 0);\n\n        //proof of concept of links to hide / show the library items based on \n        //their categories\n        $(\"#categoryLinks a\").click(function(e) {\n            e.preventDefault();\n            $(\".library-item\").hide();\n            $(\"#categoryLinks a\").removeClass(\"active\");\n            $(this).addClass(\"active\");\n            categoryName = $(this).attr(\"href\");\n            console.log(\"hiding .library-item .\" + categoryName);\n            $(\".library-item.\" + categoryName).show();\n        });\n    }\n\n    var readClick = function(e){\n        var urlParams = Helpers.getURLQueryParams();\n        //var ebookURL = urlParams['epub'];\n        var libraryURL = urlParams['epubs'];\n        var embedded = urlParams['embedded'];\n            \n        var ebookURL = $(this).attr('data-book');\n        if (ebookURL) {\n            var eventPayload = {embedded: embedded, epub: ebookURL, epubs: libraryURL};\n            $(window).triggerHandler('readepub', eventPayload);\n        }\n        else {\n            var libURL = $(this).attr('data-library');\n            if (libURL) {\n                \n                // TODO: this doesn't work, so we refresh the whole page, bypassing pushState (replaceState is used instead after reload)\n                // libraryManager.resetLibraryData();\n                // var eventPayload = libURL;\n                // $(window).triggerHandler('loadlibrary', eventPayload);\n                            \n                var URLPATH =\n                window.location ? (\n                    window.location.protocol\n                    + \"//\"\n                    + window.location.hostname\n                    + (window.location.port ? (':' + window.location.port) : '')\n                    + window.location.pathname\n                ) : 'index.html'\n                ;\n                \n                var url = URLPATH + '?epubs=' + encodeURIComponent(libURL);\n                \n                window.location = url;\n            } else {\n                var linkURL = $(this).attr('data-link');\n                if (linkURL) {\n                    window.open(linkURL, '_blank');\n                }\n            }\n        }\n        return false;\n    }\n\n    var unloadLibraryUI = function(){\n\n        // needed only if access keys can potentially be used to open a book while a dialog is opened, because keyboard.scope() is not accounted for with HTML access keys :(\n        Dialogs.closeModal();\n        Dialogs.reset();\n        $('.modal-backdrop').remove();\n\n        Keyboard.off('library');\n        Keyboard.off('settings');\n\n        $('#settings-dialog').off('hidden.bs.modal');\n        $('#settings-dialog').off('shown.bs.modal');\n\n        $('#about-dialog').off('hidden.bs.modal');\n        $('#about-dialog').off('shown.bs.modal');\n\n        $('#add-epub-dialog').off('hidden.bs.modal');\n        $('#add-epub-dialog').off('shown.bs.modal');\n\n        $('.details-dialog').off('hidden.bs.modal');\n        $('.details-dialog').off('shown.bs.modal');\n\n        $(window).off('resize');\n        $(document.body).off('click');\n        $(window).off('storageReady');\n        $('#app-container').attr('style', '');\n    }\n\n    var promptForReplace = function(originalData, replaceCallback, keepBothCallback){\n        Settings.get('replaceByDefault', function(val){\n            if (val === 'true'){\n                replaceCallback()\n            }\n            else{\n                keepBothCallback();\n            }\n        })\n    }\n\n    var handleLibraryChange = function(){\n        Dialogs.closeModal();\n        libraryManager.retrieveAvailableEpubs(loadLibraryItems);\n    }\n\n    var importZippedEpub = function(file) {\n        \n        Dialogs.showModalProgress(Strings.import_dlg_title, Strings.import_dlg_message);\n        libraryManager.handleZippedEpub({\n            file: file,\n            overwrite: promptForReplace,\n            success: handleLibraryChange,\n            progress: Dialogs.updateProgress,\n            error: showError\n        });\n    };\n\n    var handleFileSelect = function(evt){\n        $('#add-epub-dialog').modal('hide');\n        \n        var file = evt.target.files[0];\n        importZippedEpub(file);\n    }\n\n    var handleDirSelect = function(evt){\n        var files = evt.target.files;\n        $('#add-epub-dialog').modal('hide');\n        Dialogs.showModalProgress(Strings.import_dlg_title, Strings.import_dlg_message);\n        libraryManager.handleDirectoryImport({\n            files: files,\n            overwrite: promptForReplace,\n            success: handleLibraryChange,\n            progress: Dialogs.updateProgress,\n            error: showError\n        });\n    }\n    \n    var handleUrlSelect = function(){\n        var url = $('#url-upload').val();\n        $('#add-epub-dialog').modal('hide');\n        Dialogs.showModalProgress(Strings.import_dlg_title, Strings.import_dlg_message);\n        libraryManager.handleUrlImport({\n            url: url,\n            overwrite: promptForReplace,\n            success: handleLibraryChange,\n            progress: Dialogs.updateProgress,\n            error: showError\n        });\n    }\n\n    var importEpub = function(ebook) {\n        \n        // TODO: also allow import of URL and directory select\n        // See libraryManager.canHandleUrl() + handleUrlSelect()\n        // See libraryManager.canHandleDirectory() + handleDirSelect()\n        \n        if (!window.Blob || !(ebook instanceof Blob)) return;\n        if (!window.File || !(ebook instanceof File)) return;\n        \n        importZippedEpub(ebook);\n    };\n\n    var doMigration = function(){\n        Dialogs.showModalProgress(Strings.migrate_dlg_title, Strings.migrate_dlg_message);\n        libraryManager.handleMigration({\n            success: function(){\n                Settings.put('needsMigration', false, $.noop);\n                handleLibraryChange();\n            },\n            progress: Dialogs.updateProgress,\n            error: showError\n        });\n    }\n\n    var loadLibraryUI = function(){\n\n        Dialogs.reset();\n\n        Keyboard.scope('library');\n\n        Analytics.trackView('/library');\n        var $appContainer = $('#app-container');\n        $appContainer.empty();\n        SettingsDialog.initDialog();\n        \n        $appContainer.append(AddEpubDialog({\n            canHandleUrl : libraryManager.canHandleUrl(),\n            canHandleDirectory : libraryManager.canHandleDirectory(),\n            strings: Strings\n        }));\n\n        $('#buttCancelAddEpub').on('keydown',function(evt) {\n            if(evt.which === 9 && !(evt.shiftKey | evt.ctrlKey | evt.metaKey | evt.altKey)) { // TAB pressed\n              evt.preventDefault();\n              $('#closeAddEpubCross').focus();\n            }\n        });\n        $('#closeAddEpubCross').on('keydown',function(evt) {\n            if(evt.which === 9 && evt.shiftKey) { // shift-TAB pressed\n              evt.preventDefault();\n              $('#buttCancelAddEpub').focus();\n            }\n        });\n        \n        Versioning.getVersioningInfo(function(version){\n            $appContainer.append(AboutDialog({imagePathPrefix: moduleConfig.imagePathPrefix, strings: Strings, dateTimeString: version.dateTimeString, viewerJs: version.readiumJsViewer, readiumJs: version.readiumJs, sharedJs: version.readiumSharedJs, cfiJs: version.readiumCfiJs}));\n        });\n\n\n        $('#about-dialog').on('hidden.bs.modal', function () {\n            Keyboard.scope('library');\n\n            setTimeout(function(){ $(\"#aboutButt1\").focus(); }, 50);\n        });\n        $('#about-dialog').on('shown.bs.modal', function(){\n            Keyboard.scope('about');\n        });\n\n        $('#add-epub-dialog').on('hidden.bs.modal', function () {\n            Keyboard.scope('library');\n\n            setTimeout(function(){ $(\"#addbutt\").focus(); }, 50);\n        });\n        $('#add-epub-dialog').on('shown.bs.modal', function(){\n            Keyboard.scope('add');\n\n            $('#add-epub-dialog input').val('');\n\n            setTimeout(function(){ $('#closeAddEpubCross')[0].focus(); }, 1000);\n        });\n        $('#url-upload').on('keyup', function(){\n            var val = $(this).val();\n            if (val && val.length){\n                $('#add-epub-dialog .add-book').prop('disabled', false);\n            }\n            else{\n                $('#add-epub-dialog .add-book').prop('disabled', true);\n            }\n        });\n        $('.add-book').on('click', handleUrlSelect);\n        $('nav').empty();\n        $('nav').attr(\"aria-label\", Strings.i18n_toolbar);\n        $('nav').append(LibraryNavbar({strings: Strings, dialogs: Dialogs, keyboard: Keyboard}));\n        $('.icon-list-view').on('click', function(){\n            $(document.body).addClass('list-view');\n            libraryManager.retrieveAvailableEpubs(loadLibraryItemsListView);\n            setTimeout(function(){ $('.icon-thumbnails')[0].focus(); }, 50);\n        });\n        $('.icon-thumbnails').on('click', function(){\n            $(document.body).removeClass('list-view');\n            libraryManager.retrieveAvailableEpubs(loadLibraryItemsGridView);\n            setTimeout(function(){ $('.icon-list-view')[0].focus(); }, 50);\n        });\n        findHeightRule();\n        setItemHeight();\n        StorageManager.initStorage(function(){\n            libraryManager.retrieveAvailableEpubs(loadLibraryItems);\n        }, showError);\n\n        Keyboard.on(Keyboard.ShowSettingsModal, 'library', function(){$('#settings-dialog').modal(\"show\");});\n\n        $(window).trigger('libraryUIReady');\n        $(window).on('resize', setItemHeight);\n\n        var setAppSize = function(){\n            var appHeight = $(document.body).height() - $('#app-container')[0].offsetTop;\n            $('#app-container').height(appHeight);\n        }\n        $(window).on('resize', setAppSize);\n        $('#app-container').css('overflowY', 'auto');\n\n        setAppSize();\n        $(document.body).on('click', '.read', readClick);\n        $('#epub-upload').on('change', handleFileSelect);\n        $('#dir-upload').on('change', handleDirSelect);\n\n        document.title = Strings.i18n_readium_library;\n\n        $('#settings-dialog').on('hidden.bs.modal', function () {\n\n            Keyboard.scope('library');\n\n            setTimeout(function(){ $(\"#settbutt1\").focus(); }, 50);\n\n            $(\"#buttSave\").removeAttr(\"accesskey\");\n            $(\"#buttClose\").removeAttr(\"accesskey\");\n        });\n        $('#settings-dialog').on('shown.bs.modal', function () {\n\n            Keyboard.scope('settings');\n\n            $(\"#buttSave\").attr(\"accesskey\", Keyboard.accesskeys.SettingsModalSave);\n            $(\"#buttClose\").attr(\"accesskey\", Keyboard.accesskeys.SettingsModalClose);\n        });\n\n\n        //async in Chrome\n        Settings.get(\"needsMigration\", function(needsMigration){\n            if (needsMigration){\n                doMigration();\n            }\n        });\n    }\n\n    var applyKeyboardSettingsAndLoadUi = function(data)\n    {\n        if (data && data.epubs && (typeof data.epubs == \"string\")) {\n            \n            // this is normally init'ed at page launch using the \"epubs\" URL GET query parameter,\n            // but needs manually setting when using pushState() to refresh the page contents with a different library source \n            moduleConfig.epubLibraryPath = data.epubs;\n        }\n        \n        // override current scheme with user options\n        Settings.get('reader', function(json)\n        {\n           Keyboard.applySettings(json);\n\n           loadLibraryUI();\n           \n           if (data && data.importEPUB) { // File/Blob\n               importEpub(data.importEPUB);\n           }\n        });\n    };\n    window.setReplaceByDefault = function(replace){\n        Settings.put('replaceByDefault', String(replace));\n    }\n    return {\n        loadUI : applyKeyboardSettingsAndLoadUi,\n        unloadUI : unloadLibraryUI,\n        importEpub : importEpub \n    };\n});\n\n",
build-output/_single-bundle/readium-js-viewer_all_CHROMEAPP.js:61082:define("hgn!readium_js_viewer_html_templates/details-body.html", ["hogan"], function(hogan){  var tmpl = new hogan.Template({code: function (c,p,i) { var t=this;t.b(i=i||"");t.b("<div class=\"details-body\">");t.b("\n" + i);t.b("    <button id=\"closeEpubDetailsCross\" type=\"button\" class=\"close\" data-dismiss=\"modal\"  tabindex=\"999\" title=\"");t.b(t.v(t.d("strings.i18n_close",c,p,0)));t.b(" ");t.b(t.v(t.d("strings.i18n_details",c,p,0)));t.b("\" aria-label=\"");t.b(t.v(t.d("strings.i18n_close",c,p,0)));t.b(" ");t.b(t.v(t.d("strings.i18n_details",c,p,0)));t.b("\"><span aria-hidden=\"true\">&times;</span></button>");t.b("\n" + i);t.b("    ");t.b("\n" + i);t.b("    <div class=\"offscreenText\">Details Start</div>");t.b("\n" + i);t.b("    <div class=\"modal-cover-wrap\">");t.b("\n" + i);if(t.s(t.d("data.coverHref",c,p,1),c,p,0,415,525,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("        <img class=\"details-cover-image img-responsive\" src=\"");t.b(t.v(t.d("data.coverHref",c,p,0)));t.b("\" alt=\"ePUB cover\">");t.b("\n" + i);});c.pop();}if(!t.s(t.d("data.coverHref",c,p,1),c,p,1,0,0,"")){t.b("        <div class=\"no-cover\" style=\"background-image: url('");t.b(t.v(t.d("data.noCoverBackground",c,p,0)));t.b("')\"><p>");t.b(t.v(t.d("data.title",c,p,0)));t.b("</p></div>");t.b("\n" + i);};t.b("        <div class=\"buttons\">");t.b("\n" + i);t.b("            <button id=\"buttEpubDetailsRead\" tabindex=\"1000\" class=\"btn btn-default read\" data-dismiss=\"modal\" data-book=\"");t.b(t.v(t.d("data.rootUrl",c,p,0)));t.b("\" type=\"button\">");t.b(t.v(t.d("strings.i18n_read",c,p,0)));t.b("</button>");t.b("\n" + i);t.b("            <button id=\"buttEpubDetailsDelete\" tabindex=\"1000\" class=\"btn btn-danger delete\" data-dismiss=\"modal\" type=\"button\">");t.b(t.v(t.d("strings.i18n_delete",c,p,0)));t.b("</button>");t.b("\n" + i);t.b("        </div>");t.b("\n" + i);t.b("    </div>");t.b("\n" + i);t.b("    <div class='modal-book-info'>");t.b("\n" + i);t.b("        <h3 class='modal-title'>");t.b(t.v(t.d("data.title",c,p,0)));t.b("</h3>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_author",c,p,0)));t.b(t.v(t.d("data.author",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_publisher",c,p,0)));t.b(t.v(t.d("data.publisher",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_pub_date",c,p,0)));t.b(t.v(t.d("data.pubdate",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_modified_date",c,p,0)));t.b(t.v(t.d("data.modified_date",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_id",c,p,0)));t.b(t.v(t.d("data.id",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_epub_version",c,p,0)));t.b(t.v(t.d("data.epub_version",c,p,0)));t.b("</div>        ");t.b("\n" + i);t.b("    </div>");t.b("\n");t.b("\n" + i);t.b("    <div class=\"offscreenText\">Details End</div>");t.b("\n" + i);t.b("</div>");t.b("\n");return t.fl(); },partials: {}, subs: {  }}, "", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});
build-output/_single-bundle/readium-js-viewer_all_CHROMEAPP.js:63200:              $('#closeEpubDetailsCross').focus();
build-output/_single-bundle/readium-js-viewer_all_CHROMEAPP.js:63203:        $('#closeEpubDetailsCross').on('keydown',function(evt) {
dist/chrome-app/scripts/readium-js-viewer_all_CHROMEAPP.js.map:278:    "\ndefine(\"hgn!readium_js_viewer_html_templates/details-body.html\", [\"hogan\"], function(hogan){  var tmpl = new hogan.Template({code: function (c,p,i) { var t=this;t.b(i=i||\"\");t.b(\"<div class=\\\"details-body\\\">\");t.b(\"\\n\" + i);t.b(\"    <button id=\\\"closeEpubDetailsCross\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"  tabindex=\\\"999\\\" title=\\\"\");t.b(t.v(t.d(\"strings.i18n_close\",c,p,0)));t.b(\" \");t.b(t.v(t.d(\"strings.i18n_details\",c,p,0)));t.b(\"\\\" aria-label=\\\"\");t.b(t.v(t.d(\"strings.i18n_close\",c,p,0)));t.b(\" \");t.b(t.v(t.d(\"strings.i18n_details\",c,p,0)));t.b(\"\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\");t.b(\"\\n\" + i);t.b(\"    \");t.b(\"\\n\" + i);t.b(\"    <div class=\\\"offscreenText\\\">Details Start</div>\");t.b(\"\\n\" + i);t.b(\"    <div class=\\\"modal-cover-wrap\\\">\");t.b(\"\\n\" + i);if(t.s(t.d(\"data.coverHref\",c,p,1),c,p,0,415,525,\"{{ }}\")){t.rs(c,p,function(c,p,t){t.b(\"        <img class=\\\"details-cover-image img-responsive\\\" src=\\\"\");t.b(t.v(t.d(\"data.coverHref\",c,p,0)));t.b(\"\\\" alt=\\\"ePUB cover\\\">\");t.b(\"\\n\" + i);});c.pop();}if(!t.s(t.d(\"data.coverHref\",c,p,1),c,p,1,0,0,\"\")){t.b(\"        <div class=\\\"no-cover\\\" style=\\\"background-image: url('\");t.b(t.v(t.d(\"data.noCoverBackground\",c,p,0)));t.b(\"')\\\"><p>\");t.b(t.v(t.d(\"data.title\",c,p,0)));t.b(\"</p></div>\");t.b(\"\\n\" + i);};t.b(\"        <div class=\\\"buttons\\\">\");t.b(\"\\n\" + i);t.b(\"            <button id=\\\"buttEpubDetailsRead\\\" tabindex=\\\"1000\\\" class=\\\"btn btn-default read\\\" data-dismiss=\\\"modal\\\" data-book=\\\"\");t.b(t.v(t.d(\"data.rootUrl\",c,p,0)));t.b(\"\\\" type=\\\"button\\\">\");t.b(t.v(t.d(\"strings.i18n_read\",c,p,0)));t.b(\"</button>\");t.b(\"\\n\" + i);t.b(\"            <button id=\\\"buttEpubDetailsDelete\\\" tabindex=\\\"1000\\\" class=\\\"btn btn-danger delete\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\");t.b(t.v(t.d(\"strings.i18n_delete\",c,p,0)));t.b(\"</button>\");t.b(\"\\n\" + i);t.b(\"        </div>\");t.b(\"\\n\" + i);t.b(\"    </div>\");t.b(\"\\n\" + i);t.b(\"    <div class='modal-book-info'>\");t.b(\"\\n\" + i);t.b(\"        <h3 class='modal-title'>\");t.b(t.v(t.d(\"data.title\",c,p,0)));t.b(\"</h3>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_author\",c,p,0)));t.b(t.v(t.d(\"data.author\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_publisher\",c,p,0)));t.b(t.v(t.d(\"data.publisher\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_pub_date\",c,p,0)));t.b(t.v(t.d(\"data.pubdate\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_modified_date\",c,p,0)));t.b(t.v(t.d(\"data.modified_date\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_id\",c,p,0)));t.b(t.v(t.d(\"data.id\",c,p,0)));t.b(\"</div>\");t.b(\"\\n\" + i);t.b(\"        <div class='modal-detail'>\");t.b(t.v(t.d(\"strings.i18n_epub_version\",c,p,0)));t.b(t.v(t.d(\"data.epub_version\",c,p,0)));t.b(\"</div>        \");t.b(\"\\n\" + i);t.b(\"    </div>\");t.b(\"\\n\");t.b(\"\\n\" + i);t.b(\"    <div class=\\\"offscreenText\\\">Details End</div>\");t.b(\"\\n\" + i);t.b(\"</div>\");t.b(\"\\n\");return t.fl(); },partials: {}, subs: {  }}, \"\", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});\n\n",
dist/chrome-app/scripts/readium-js-viewer_all_CHROMEAPP.js.map:296:    "define('readium_js_viewer/EpubLibrary',[\n'./ModuleConfig',\n'jquery',\n'bootstrap',\n'bootstrapA11y',\n'StorageManager',\n'Settings',\n'./EpubLibraryManager',\n'i18nStrings',\n'hgn!readium_js_viewer_html_templates/library-navbar.html',\n'hgn!readium_js_viewer_html_templates/library-body.html',\n'hgn!readium_js_viewer_html_templates/library-body-list-view.html',\n'hgn!readium_js_viewer_html_templates/empty-library.html',\n'hgn!readium_js_viewer_html_templates/library-item.html',\n'hgn!readium_js_viewer_html_templates/library-item-list-view.html',\n'hgn!readium_js_viewer_html_templates/dialog.html',\n'hgn!readium_js_viewer_html_templates/about-dialog.html',\n'hgn!readium_js_viewer_html_templates/details-body.html',\n'hgn!readium_js_viewer_html_templates/add-epub-dialog.html',\n'hgn!readium_js_viewer_html_templates/categories-dialog-body.html',\n'hgn!readium_js_viewer_html_templates/filter-categories-dialog-body.html',\n'./ReaderSettingsDialog',\n'./CategoriesDialog',\n'./FilterCategoriesDialog',\n'./Dialogs',\n'./workers/Messages',\n'Analytics',\n'./Keyboard',\n'./versioning/ReadiumVersioning',\n'readium_shared_js/helpers'],\n\nfunction(\nmoduleConfig,\n$,\nbootstrap,\nbootstrapA11y,\nStorageManager,\nSettings,\nlibraryManager,\nStrings,\nLibraryNavbar,\nLibraryBody,\nLibraryBodyListView,\nEmptyLibrary,\nLibraryItem,\nLibraryItemListView,\nDialog,\nAboutDialog,\nDetailsBody,\nAddEpubDialog,\nCategoriesDialogBody,\nFilterCategoriesDialogBody,\nSettingsDialog,\nCategoriesDialogController,\nFilterCategoriesDialogController,\nDialogs,\nMessages,\nAnalytics,\nKeyboard,\nVersioning,\nHelpers){\n\n\n    //to add a header section to the Dialog, add header: \"true\" property\n    var pageDialogsHtmlString = { \n        details             : Dialog({ dialogName: \"details\"            }),\n        filterCategories    : Dialog({ dialogName: \"filterCategories\"   }),\n        categories          : Dialog({ dialogName: \"categories\"         })\n                        };\n\n    var heightRule,\n        noCoverRule;\n        //maxHeightRule\n\n    var findHeightRule = function(){\n\n         var styleSheet=document.styleSheets[0];\n         var ii=0;\n         var cssRule;\n        do {\n            if (styleSheet.cssRules) {\n                cssRule = styleSheet.cssRules[ii];\n            } else {\n                cssRule = styleSheet.rules[ii];\n            }\n            if (cssRule && cssRule.selectorText)  {\n                if (cssRule.selectorText.toLowerCase()=='.library-item') {\n                    heightRule = cssRule;\n                }\n                // else if (cssRule.selectorText.toLowerCase()=='.library-item img') {\n                //     maxHeightRule = cssRule;\n                // }\n                else if (cssRule.selectorText.toLowerCase() == 'body:not(.list-view) .library-item .no-cover'){\n                    noCoverRule = cssRule;\n                }\n\n            }\n            ii++;\n        } while (cssRule);\n       }\n\n\n    var setItemHeight = function(){\n        if (!heightRule || !noCoverRule) return;\n\n        var medWidth = 2,\n            smWidth = 3,\n            xsWidth = 4,\n            rowHeight = 0,\n            imgWidth = 0,\n            scale = 1;\n\n        var winWidth = window.innerWidth;\n\n        if (winWidth >= 992){\n            imgWidth = winWidth * (medWidth/12) - 30;\n            rowHeight = 1.33 * imgWidth + 60;\n        }\n        else if (winWidth >= 768){\n            imgWidth = winWidth * (smWidth/12) - 30;\n            rowHeight = 1.33 * imgWidth + 60;\n        }\n        else{\n            imgWidth = winWidth * (xsWidth/12) - 30;\n            rowHeight = 1.33 * imgWidth + 20;\n        }\n        heightRule.style.height  = rowHeight + 'px';\n        scale = imgWidth/300;\n\n        noCoverRule.style.width = imgWidth + 'px';\n        noCoverRule.style.height = 1.33 * imgWidth + 'px';\n        noCoverRule.style.fontSize = 40 * scale + 'px';\n        //maxHeightRule.style.height = 1.33 * imgWidth + 'px';\n        //maxHeightRule.style.width = imgWidth + 'px';\n    };\n\n\n    var loadFilterCategoriesDialog = function() {\n        //load the categories template as a string\n        bodyStr = FilterCategoriesDialogBody({string: Strings });\n        showDialog(\"filterCategories\");\n        $('.filterCategories-dialog .modal-body').html(bodyStr);\n        FilterCategoriesDialogController.initDialog();\n    };\n\n    /**\n     * Loads the categories dialog to add / remove and view current category tags for the book\n     */\n    var loadCategoriesDialog = function() {\n\n        //pull categories from current HTML\n        var categoriesCommaSeparated = $(this).attr('data-categories');\n        \n        //unique identifier - root directory\n        var rootDir = $(this).attr('data-root-dir');\n        var categories = categoriesCommaSeparated.split(\",\");\n\n        //there is an extra category b/c the mustache template will generate an extra \n        //comma, so remove that. \n        categories.pop();\n        \n\n        //load the categories template as a string\n        bodyStr = CategoriesDialogBody({string: Strings, categories: categories,rootDir:rootDir});\n\n        showDialog(\"categories\");\n        $('.categories-dialog .modal-body').html(bodyStr);\n        CategoriesDialogController.initDialog(loadLibraryItems);\n    };//var loadCategoriesDialog = function() \n\n    var showDetailsDialog = function(details){\n        var bodyStr = DetailsBody({\n            data: details,\n            strings: Strings\n        });\n\n        $('.details-dialog .modal-body').html(bodyStr);\n        \n        \n        $('#buttEpubDetailsDelete').on('keydown',function(evt) {\n            if(evt.which === 9 && !(evt.shiftKey | evt.ctrlKey | evt.metaKey | evt.altKey)) { // TAB pressed\n              evt.preventDefault();\n              $('#closeEpubDetailsCross').focus();\n            }\n        });\n        $('#closeEpubDetailsCross').on('keydown',function(evt) {\n            if(evt.which === 9 && evt.shiftKey) { // shift-TAB pressed\n              evt.preventDefault();\n              $('#buttEpubDetailsDelete').focus();\n            }\n        });\n        \n        $('.details-dialog .delete').on('click', function(){\n            $('.details-dialog').modal('hide');\n            var success = function(){\n                libraryManager.retrieveAvailableEpubs(loadLibraryItems);\n                Dialogs.closeModal();\n            }\n\n            var promptMsg = Strings.i18n_are_you_sure + ' \\'' + details.title + '\\'';\n\n            Dialogs.showModalPrompt(Strings.delete_dlg_title, promptMsg,\n                                    Strings.i18n_delete, Strings.i18n_cancel,\n                                    function(){\n                                        Dialogs.showModalProgress(Strings.delete_progress_title, '');\n                                        Dialogs.updateProgress(100, Messages.PROGRESS_DELETING, details.title, true);\n                                        libraryManager.deleteEpubWithId(details.rootDir, success, showError)\n                                    });\n        });\n    }\n\n\n    var showError = function(errorCode, data){\n        Dialogs.showError(errorCode, data);\n    }\n\n\n    /**\n     * Shows a modal dialog box \n     * @param   dialogName  The name of the box being loaded\n     */\n    var showDialog = function(dialogName)\n    {\n        $('.'+dialogName+'-dialog').remove();\n        $('#app-container').append(pageDialogsHtmlString[dialogName]);\n        $('.'+dialogName+'-dialog').modal();\n    }\n\n    var loadDetails = function(e){\n        var $this = $(this),\n            url = $this.attr('data-package'),\n            bookRoot = $this.attr('data-root'),\n            rootDir = $this.attr('data-root-dir'),\n            noCoverBg = $this.attr('data-no-cover');\n\n        $('.details-dialog').remove();\n\n        $('.details-dialog').off('hidden.bs.modal');\n        $('.details-dialog').off('shown.bs.modal');\n\n        $('#app-container').append(pageDialogsHtmlString.details);\n        \n        $('#details-dialog').on('hidden.bs.modal', function () {\n            Keyboard.scope('library');\n\n            setTimeout(function(){ $this.focus(); }, 50);\n        });\n        $('#details-dialog').on('shown.bs.modal', function(){\n            Keyboard.scope('details');\n        });\n\n\n        $('.details-dialog').modal();\n        \n        var retrieveDetails = function(packageUrl) {\n            \n            if (!packageUrl || packageUrl.indexOf(\".opf\") < 0) {\n                console.warn(\"no package path (OPF within zipped EPUB archive?): \" + packageUrl);\n            }\n            \n            libraryManager.retrieveFullEpubDetails(packageUrl, bookRoot, rootDir, noCoverBg, showDetailsDialog, showError);\n        };\n        \n        console.log(\"OPF package URL: \" + url);\n        if (url && url.indexOf(\".opf\") < 0) {\n            \n            var urlContainerXml = url + \"META-INF/container.xml\"; \n            $.get(urlContainerXml, function(data){\n    \n                if(typeof(data) === \"string\" ) {\n                    var parser = new window.DOMParser;\n                    data = parser.parseFromString(data, 'text/xml');\n                }\n                var $rootfile = $('rootfile', data);\n                var rootFilePath = $rootfile.attr('full-path');\n                console.log(\"OPF package path (root-file from container.xml): \" + rootFilePath);\n                \n                var packageUrl = url + (Helpers.EndsWith(url, \"/\") ? \"\" : \"/\") + rootFilePath;\n            \n                console.log(\"OPF package URL (from container.xml): \" + packageUrl);\n                retrieveDetails(packageUrl);\n    \n            }).fail(function() {\n                //console.warn(arguments);\n                console.error(\"FAILED OPF package URL (from container.xml): \" + urlContainerXml);\n                retrieveDetails(url);\n            });\n        }\n        else {\n            retrieveDetails(url);\n        }\n    }\n\n    var viewTypes = { grid : \"grid\", list : \"list\"}\n    var loadLibraryItemsGridView = function(epubs) {\n        loadLibraryItems(epubs,viewTypes.grid);\n    }\n    var loadLibraryItemsListView = function(epubs) {\n        loadLibraryItems(epubs,viewTypes.list);\n    }\n\n    var loadLibraryItems = function(epubs,viewType){\n        $('#app-container .library-items').remove();\n\n        //if the view type isn't specified, check if we have the list-view class\n        if (typeof(viewType) === 'undefined') {\n                if ($('body').hasClass(\"list-view\")) {\n                    viewType = viewTypes.list;\n                }\n                else {\n                    viewType = viewTypes.grid;\n                }\n        }//if\n        \n\n        //load library body based on what type of view we are in \n\n        //Load LIST VIEW library body\n        if (viewType === viewTypes.list) {\n            console.log(\"append the list view library body\");\n            $('#app-container').append(LibraryBodyListView({}));\n        }\n        //Load GRID VIEW library body\n        else if (viewType === viewTypes.grid){\n            console.log(\"append the GRID view library body\");\n            $('#app-container').append(LibraryBody({}));\n        }\n\n        if (!epubs.length){\n            $('#app-container .library-items').append(EmptyLibrary({imagePathPrefix: moduleConfig.imagePathPrefix, strings: Strings}));\n            return;\n        }\n        \n        /**\n         * Recursive function to process all epubs. \n         */\n        var processEpub = function(epubs, count) {\n            var epub = epubs[count];\n\n            //On last epub\n            if (!epub) { // count >= epubs.length, eg epub[count] = null\n                $('.details').on('click', loadDetails);\n                $('.categories').on('click', loadCategoriesDialog );\n                $('.filterCategories').on('click', loadFilterCategoriesDialog );\n                return;\n            }\n\n            var noCoverBackground = moduleConfig.imagePathPrefix + 'images/covers/cover' + ((count % 8) + 1) + '.jpg';\n            if (epub.isSubLibraryLink) {\n                noCoverBackground = moduleConfig.imagePathPrefix + 'images/covers/cover2.jpg';\n            }\n\n\n            \n            var createLibraryItem = function() {\n\n                cssClassesString = \"\";\n                if (epub.hasOwnProperty(\"categories\")) {\n                    var cssClassesString = epub.categories.join(\"#\");\n                    cssClassesString = cssClassesString.replace(/ /g, \"_\");\n                    cssClassesString = cssClassesString.replace(/#/g, \" \");\n                }\n                //Display the library item depending on the view type\n                \n                //LIST VIEW\n                if (viewType === viewTypes.list)\n                {\n                    $('.library-items').append(LibraryItemListView({count:{n: count+1, tabindex:count*2+99}, epub: epub, strings: Strings, noCoverBackground: noCoverBackground,cssClasses:cssClassesString}));\n                    console.log(\"view type was equal to list\");\n                }\n                //GRID VIEW \n                else if (viewType === viewTypes.grid)\n                {\n                    $('.library-items').append(LibraryItem({count:{n: count+1, tabindex:count*2+99}, epub: epub, strings: Strings, noCoverBackground: noCoverBackground,cssClasses:cssClassesString}));\n                }\n\n                \n                processEpub(epubs, ++count);\n            };\n            \n            if (!epub.isSubLibraryLink && !epub.packagePath) {\n                \n                createLibraryItem();\n                \n                // --COMMENT--\n                // Code below works, but just here to demonstrate how the package OPF path can be resolved whilst populating the library view. Because the HTTP requests for each ebook introduce huge lag, instead we resolve the OPF path on-demand, when user chooses to see the EPUB details / metadata dialog popup (see loadDetails() function above, which itself emits an HTTP request to get the actual OPF file XML payload, via LibraryManager.retrieveFullEpubDetails())\n                // $.get(epub.rootUrl + \"/META-INF/container.xml\", function(data){\n        \n                //     if(typeof(data) === \"string\" ) {\n                //         var parser = new window.DOMParser;\n                //         data = parser.parseFromString(data, 'text/xml');\n                //     }\n                //     var $rootfile = $('rootfile', data);\n                //     epub.packagePath = $rootfile.attr('full-path');\n                \n                //     createLibraryItem();\n        \n                // }).fail(function() {\n                //     //console.warn(arguments);\n                //     createLibraryItem();\n                // });\n            }\n            else {\n                createLibraryItem();\n            }\n        };\n        processEpub(epubs, 0);\n\n        //proof of concept of links to hide / show the library items based on \n        //their categories\n        $(\"#categoryLinks a\").click(function(e) {\n            e.preventDefault();\n            $(\".library-item\").hide();\n            $(\"#categoryLinks a\").removeClass(\"active\");\n            $(this).addClass(\"active\");\n            categoryName = $(this).attr(\"href\");\n            console.log(\"hiding .library-item .\" + categoryName);\n            $(\".library-item.\" + categoryName).show();\n        });\n    }\n\n    var readClick = function(e){\n        var urlParams = Helpers.getURLQueryParams();\n        //var ebookURL = urlParams['epub'];\n        var libraryURL = urlParams['epubs'];\n        var embedded = urlParams['embedded'];\n            \n        var ebookURL = $(this).attr('data-book');\n        if (ebookURL) {\n            var eventPayload = {embedded: embedded, epub: ebookURL, epubs: libraryURL};\n            $(window).triggerHandler('readepub', eventPayload);\n        }\n        else {\n            var libURL = $(this).attr('data-library');\n            if (libURL) {\n                \n                // TODO: this doesn't work, so we refresh the whole page, bypassing pushState (replaceState is used instead after reload)\n                // libraryManager.resetLibraryData();\n                // var eventPayload = libURL;\n                // $(window).triggerHandler('loadlibrary', eventPayload);\n                            \n                var URLPATH =\n                window.location ? (\n                    window.location.protocol\n                    + \"//\"\n                    + window.location.hostname\n                    + (window.location.port ? (':' + window.location.port) : '')\n                    + window.location.pathname\n                ) : 'index.html'\n                ;\n                \n                var url = URLPATH + '?epubs=' + encodeURIComponent(libURL);\n                \n                window.location = url;\n            } else {\n                var linkURL = $(this).attr('data-link');\n                if (linkURL) {\n                    window.open(linkURL, '_blank');\n                }\n            }\n        }\n        return false;\n    }\n\n    var unloadLibraryUI = function(){\n\n        // needed only if access keys can potentially be used to open a book while a dialog is opened, because keyboard.scope() is not accounted for with HTML access keys :(\n        Dialogs.closeModal();\n        Dialogs.reset();\n        $('.modal-backdrop').remove();\n\n        Keyboard.off('library');\n        Keyboard.off('settings');\n\n        $('#settings-dialog').off('hidden.bs.modal');\n        $('#settings-dialog').off('shown.bs.modal');\n\n        $('#about-dialog').off('hidden.bs.modal');\n        $('#about-dialog').off('shown.bs.modal');\n\n        $('#add-epub-dialog').off('hidden.bs.modal');\n        $('#add-epub-dialog').off('shown.bs.modal');\n\n        $('.details-dialog').off('hidden.bs.modal');\n        $('.details-dialog').off('shown.bs.modal');\n\n        $(window).off('resize');\n        $(document.body).off('click');\n        $(window).off('storageReady');\n        $('#app-container').attr('style', '');\n    }\n\n    var promptForReplace = function(originalData, replaceCallback, keepBothCallback){\n        Settings.get('replaceByDefault', function(val){\n            if (val === 'true'){\n                replaceCallback()\n            }\n            else{\n                keepBothCallback();\n            }\n        })\n    }\n\n    var handleLibraryChange = function(){\n        Dialogs.closeModal();\n        libraryManager.retrieveAvailableEpubs(loadLibraryItems);\n    }\n\n    var importZippedEpub = function(file) {\n        \n        Dialogs.showModalProgress(Strings.import_dlg_title, Strings.import_dlg_message);\n        libraryManager.handleZippedEpub({\n            file: file,\n            overwrite: promptForReplace,\n            success: handleLibraryChange,\n            progress: Dialogs.updateProgress,\n            error: showError\n        });\n    };\n\n    var handleFileSelect = function(evt){\n        $('#add-epub-dialog').modal('hide');\n        \n        var file = evt.target.files[0];\n        importZippedEpub(file);\n    }\n\n    var handleDirSelect = function(evt){\n        var files = evt.target.files;\n        $('#add-epub-dialog').modal('hide');\n        Dialogs.showModalProgress(Strings.import_dlg_title, Strings.import_dlg_message);\n        libraryManager.handleDirectoryImport({\n            files: files,\n            overwrite: promptForReplace,\n            success: handleLibraryChange,\n            progress: Dialogs.updateProgress,\n            error: showError\n        });\n    }\n    \n    var handleUrlSelect = function(){\n        var url = $('#url-upload').val();\n        $('#add-epub-dialog').modal('hide');\n        Dialogs.showModalProgress(Strings.import_dlg_title, Strings.import_dlg_message);\n        libraryManager.handleUrlImport({\n            url: url,\n            overwrite: promptForReplace,\n            success: handleLibraryChange,\n            progress: Dialogs.updateProgress,\n            error: showError\n        });\n    }\n\n    var importEpub = function(ebook) {\n        \n        // TODO: also allow import of URL and directory select\n        // See libraryManager.canHandleUrl() + handleUrlSelect()\n        // See libraryManager.canHandleDirectory() + handleDirSelect()\n        \n        if (!window.Blob || !(ebook instanceof Blob)) return;\n        if (!window.File || !(ebook instanceof File)) return;\n        \n        importZippedEpub(ebook);\n    };\n\n    var doMigration = function(){\n        Dialogs.showModalProgress(Strings.migrate_dlg_title, Strings.migrate_dlg_message);\n        libraryManager.handleMigration({\n            success: function(){\n                Settings.put('needsMigration', false, $.noop);\n                handleLibraryChange();\n            },\n            progress: Dialogs.updateProgress,\n            error: showError\n        });\n    }\n\n    var loadLibraryUI = function(){\n\n        Dialogs.reset();\n\n        Keyboard.scope('library');\n\n        Analytics.trackView('/library');\n        var $appContainer = $('#app-container');\n        $appContainer.empty();\n        SettingsDialog.initDialog();\n        \n        $appContainer.append(AddEpubDialog({\n            canHandleUrl : libraryManager.canHandleUrl(),\n            canHandleDirectory : libraryManager.canHandleDirectory(),\n            strings: Strings\n        }));\n\n        $('#buttCancelAddEpub').on('keydown',function(evt) {\n            if(evt.which === 9 && !(evt.shiftKey | evt.ctrlKey | evt.metaKey | evt.altKey)) { // TAB pressed\n              evt.preventDefault();\n              $('#closeAddEpubCross').focus();\n            }\n        });\n        $('#closeAddEpubCross').on('keydown',function(evt) {\n            if(evt.which === 9 && evt.shiftKey) { // shift-TAB pressed\n              evt.preventDefault();\n              $('#buttCancelAddEpub').focus();\n            }\n        });\n        \n        Versioning.getVersioningInfo(function(version){\n            $appContainer.append(AboutDialog({imagePathPrefix: moduleConfig.imagePathPrefix, strings: Strings, dateTimeString: version.dateTimeString, viewerJs: version.readiumJsViewer, readiumJs: version.readiumJs, sharedJs: version.readiumSharedJs, cfiJs: version.readiumCfiJs}));\n        });\n\n\n        $('#about-dialog').on('hidden.bs.modal', function () {\n            Keyboard.scope('library');\n\n            setTimeout(function(){ $(\"#aboutButt1\").focus(); }, 50);\n        });\n        $('#about-dialog').on('shown.bs.modal', function(){\n            Keyboard.scope('about');\n        });\n\n        $('#add-epub-dialog').on('hidden.bs.modal', function () {\n            Keyboard.scope('library');\n\n            setTimeout(function(){ $(\"#addbutt\").focus(); }, 50);\n        });\n        $('#add-epub-dialog').on('shown.bs.modal', function(){\n            Keyboard.scope('add');\n\n            $('#add-epub-dialog input').val('');\n\n            setTimeout(function(){ $('#closeAddEpubCross')[0].focus(); }, 1000);\n        });\n        $('#url-upload').on('keyup', function(){\n            var val = $(this).val();\n            if (val && val.length){\n                $('#add-epub-dialog .add-book').prop('disabled', false);\n            }\n            else{\n                $('#add-epub-dialog .add-book').prop('disabled', true);\n            }\n        });\n        $('.add-book').on('click', handleUrlSelect);\n        $('nav').empty();\n        $('nav').attr(\"aria-label\", Strings.i18n_toolbar);\n        $('nav').append(LibraryNavbar({strings: Strings, dialogs: Dialogs, keyboard: Keyboard}));\n        $('.icon-list-view').on('click', function(){\n            $(document.body).addClass('list-view');\n            libraryManager.retrieveAvailableEpubs(loadLibraryItemsListView);\n            setTimeout(function(){ $('.icon-thumbnails')[0].focus(); }, 50);\n        });\n        $('.icon-thumbnails').on('click', function(){\n            $(document.body).removeClass('list-view');\n            libraryManager.retrieveAvailableEpubs(loadLibraryItemsGridView);\n            setTimeout(function(){ $('.icon-list-view')[0].focus(); }, 50);\n        });\n        findHeightRule();\n        setItemHeight();\n        StorageManager.initStorage(function(){\n            libraryManager.retrieveAvailableEpubs(loadLibraryItems);\n        }, showError);\n\n        Keyboard.on(Keyboard.ShowSettingsModal, 'library', function(){$('#settings-dialog').modal(\"show\");});\n\n        $(window).trigger('libraryUIReady');\n        $(window).on('resize', setItemHeight);\n\n        var setAppSize = function(){\n            var appHeight = $(document.body).height() - $('#app-container')[0].offsetTop;\n            $('#app-container').height(appHeight);\n        }\n        $(window).on('resize', setAppSize);\n        $('#app-container').css('overflowY', 'auto');\n\n        setAppSize();\n        $(document.body).on('click', '.read', readClick);\n        $('#epub-upload').on('change', handleFileSelect);\n        $('#dir-upload').on('change', handleDirSelect);\n\n        document.title = Strings.i18n_readium_library;\n\n        $('#settings-dialog').on('hidden.bs.modal', function () {\n\n            Keyboard.scope('library');\n\n            setTimeout(function(){ $(\"#settbutt1\").focus(); }, 50);\n\n            $(\"#buttSave\").removeAttr(\"accesskey\");\n            $(\"#buttClose\").removeAttr(\"accesskey\");\n        });\n        $('#settings-dialog').on('shown.bs.modal', function () {\n\n            Keyboard.scope('settings');\n\n            $(\"#buttSave\").attr(\"accesskey\", Keyboard.accesskeys.SettingsModalSave);\n            $(\"#buttClose\").attr(\"accesskey\", Keyboard.accesskeys.SettingsModalClose);\n        });\n\n\n        //async in Chrome\n        Settings.get(\"needsMigration\", function(needsMigration){\n            if (needsMigration){\n                doMigration();\n            }\n        });\n    }\n\n    var applyKeyboardSettingsAndLoadUi = function(data)\n    {\n        if (data && data.epubs && (typeof data.epubs == \"string\")) {\n            \n            // this is normally init'ed at page launch using the \"epubs\" URL GET query parameter,\n            // but needs manually setting when using pushState() to refresh the page contents with a different library source \n            moduleConfig.epubLibraryPath = data.epubs;\n        }\n        \n        // override current scheme with user options\n        Settings.get('reader', function(json)\n        {\n           Keyboard.applySettings(json);\n\n           loadLibraryUI();\n           \n           if (data && data.importEPUB) { // File/Blob\n               importEpub(data.importEPUB);\n           }\n        });\n    };\n    window.setReplaceByDefault = function(replace){\n        Settings.put('replaceByDefault', String(replace));\n    }\n    return {\n        loadUI : applyKeyboardSettingsAndLoadUi,\n        unloadUI : unloadLibraryUI,\n        importEpub : importEpub \n    };\n});\n\n",
dist/chrome-app/scripts/readium-js-viewer_all_CHROMEAPP.js:61082:define("hgn!readium_js_viewer_html_templates/details-body.html", ["hogan"], function(hogan){  var tmpl = new hogan.Template({code: function (c,p,i) { var t=this;t.b(i=i||"");t.b("<div class=\"details-body\">");t.b("\n" + i);t.b("    <button id=\"closeEpubDetailsCross\" type=\"button\" class=\"close\" data-dismiss=\"modal\"  tabindex=\"999\" title=\"");t.b(t.v(t.d("strings.i18n_close",c,p,0)));t.b(" ");t.b(t.v(t.d("strings.i18n_details",c,p,0)));t.b("\" aria-label=\"");t.b(t.v(t.d("strings.i18n_close",c,p,0)));t.b(" ");t.b(t.v(t.d("strings.i18n_details",c,p,0)));t.b("\"><span aria-hidden=\"true\">&times;</span></button>");t.b("\n" + i);t.b("    ");t.b("\n" + i);t.b("    <div class=\"offscreenText\">Details Start</div>");t.b("\n" + i);t.b("    <div class=\"modal-cover-wrap\">");t.b("\n" + i);if(t.s(t.d("data.coverHref",c,p,1),c,p,0,415,525,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("        <img class=\"details-cover-image img-responsive\" src=\"");t.b(t.v(t.d("data.coverHref",c,p,0)));t.b("\" alt=\"ePUB cover\">");t.b("\n" + i);});c.pop();}if(!t.s(t.d("data.coverHref",c,p,1),c,p,1,0,0,"")){t.b("        <div class=\"no-cover\" style=\"background-image: url('");t.b(t.v(t.d("data.noCoverBackground",c,p,0)));t.b("')\"><p>");t.b(t.v(t.d("data.title",c,p,0)));t.b("</p></div>");t.b("\n" + i);};t.b("        <div class=\"buttons\">");t.b("\n" + i);t.b("            <button id=\"buttEpubDetailsRead\" tabindex=\"1000\" class=\"btn btn-default read\" data-dismiss=\"modal\" data-book=\"");t.b(t.v(t.d("data.rootUrl",c,p,0)));t.b("\" type=\"button\">");t.b(t.v(t.d("strings.i18n_read",c,p,0)));t.b("</button>");t.b("\n" + i);t.b("            <button id=\"buttEpubDetailsDelete\" tabindex=\"1000\" class=\"btn btn-danger delete\" data-dismiss=\"modal\" type=\"button\">");t.b(t.v(t.d("strings.i18n_delete",c,p,0)));t.b("</button>");t.b("\n" + i);t.b("        </div>");t.b("\n" + i);t.b("    </div>");t.b("\n" + i);t.b("    <div class='modal-book-info'>");t.b("\n" + i);t.b("        <h3 class='modal-title'>");t.b(t.v(t.d("data.title",c,p,0)));t.b("</h3>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_author",c,p,0)));t.b(t.v(t.d("data.author",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_publisher",c,p,0)));t.b(t.v(t.d("data.publisher",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_pub_date",c,p,0)));t.b(t.v(t.d("data.pubdate",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_modified_date",c,p,0)));t.b(t.v(t.d("data.modified_date",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_id",c,p,0)));t.b(t.v(t.d("data.id",c,p,0)));t.b("</div>");t.b("\n" + i);t.b("        <div class='modal-detail'>");t.b(t.v(t.d("strings.i18n_epub_version",c,p,0)));t.b(t.v(t.d("data.epub_version",c,p,0)));t.b("</div>        ");t.b("\n" + i);t.b("    </div>");t.b("\n");t.b("\n" + i);t.b("    <div class=\"offscreenText\">Details End</div>");t.b("\n" + i);t.b("</div>");t.b("\n");return t.fl(); },partials: {}, subs: {  }}, "", hogan);  function render(){ return tmpl.render.apply(tmpl, arguments); } render.template = tmpl; return render;});
dist/chrome-app/scripts/readium-js-viewer_all_CHROMEAPP.js:63200:              $('#closeEpubDetailsCross').focus();
dist/chrome-app/scripts/readium-js-viewer_all_CHROMEAPP.js:63203:        $('#closeEpubDetailsCross').on('keydown',function(evt) {
src/templates/details-body.html:2:    <button id="closeEpubDetailsCross" type="button" class="close" data-dismiss="modal"  tabindex="999" title="{{strings.i18n_close}} {{strings.i18n_details}}" aria-label="{{strings.i18n_close}} {{strings.i18n_details}}"><span aria-hidden="true">&times;</span></button>
src/js/EpubLibrary.js:183:              $('#closeEpubDetailsCross').focus();
src/js/EpubLibrary.js:186:        $('#closeEpubDetailsCross').on('keydown',function(evt) {
